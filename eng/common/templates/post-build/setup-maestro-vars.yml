# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
parameters:
  BARBuildId: ''
  PromoteToChannelIds: ''
steps:
- ${{ if eq(coalesce(parameters.PromoteToChannelIds, 0), 0) }}:
  - task: DownloadBuildArtifacts@0
    displayName: Download Release Configs
    inputs:
      buildType: current
      artifactName: ReleaseConfigs
      checkDownloadedFiles: true
- task: PowerShell@2
  name: setReleaseVars
  displayName: Set Release Configs Vars
  inputs:
    targetType: inline
    pwsh: true
    script: "try {\n  if (!$Env:PromoteToMaestroChannels -or $Env:PromoteToMaestroChannels.Trim() -eq '') {\n    $Content = Get-Content $(Build.StagingDirectory)/ReleaseConfigs/ReleaseConfigs.txt\n\n    $BarId = $Content | Select -Index 0\n    $Channels = $Content | Select -Index 1             \n    $IsStableBuild = $Content | Select -Index 2\n\n    $AzureDevOpsProject = $Env:System_TeamProject\n    $AzureDevOpsBuildDefinitionId = $Env:System_DefinitionId\n    $AzureDevOpsBuildId = $Env:Build_BuildId\n  }\n  else {\n    $buildApiEndpoint = \"${Env:MaestroApiEndPoint}/api/builds/${Env:BARBuildId}?api-version=${Env:MaestroApiVersion}\"\n\n    $apiHeaders = New-Object 'System.Collections.Generic.Dictionary[[String],[String]]'\n    $apiHeaders.Add('Accept', 'application/json')\n    $apiHeaders.Add('Authorization',\"Bearer ${Env:MAESTRO_API_TOKEN}\")\n\n    $buildInfo = try { Invoke-WebRequest -Method Get -Uri $buildApiEndpoint -Headers $apiHeaders | ConvertFrom-Json } catch { Write-Host \"Error: $_\" }\n    \n    $BarId = $Env:BARBuildId\n    $Channels = $Env:PromoteToMaestroChannels -split \",\"\n    $Channels = $Channels -join \"][\"\n    $Channels = \"[$Channels]\"\n\n    $IsStableBuild = $buildInfo.stable\n    $AzureDevOpsProject = $buildInfo.azureDevOpsProject\n    $AzureDevOpsBuildDefinitionId = $buildInfo.azureDevOpsBuildDefinitionId\n    $AzureDevOpsBuildId = $buildInfo.azureDevOpsBuildId\n  }\n\n  Write-Host \"##vso[task.setvariable variable=BARBuildId]$BarId\"\n  Write-Host \"##vso[task.setvariable variable=TargetChannels]$Channels\"\n  Write-Host \"##vso[task.setvariable variable=IsStableBuild]$IsStableBuild\"\n\n  Write-Host \"##vso[task.setvariable variable=AzDOProjectName]$AzureDevOpsProject\"\n  Write-Host \"##vso[task.setvariable variable=AzDOPipelineId]$AzureDevOpsBuildDefinitionId\"\n  Write-Host \"##vso[task.setvariable variable=AzDOBuildId]$AzureDevOpsBuildId\"\n}\ncatch {\n  Write-Host $_\n  Write-Host $_.Exception\n  Write-Host $_.ScriptStackTrace\n  exit 1\n}\n"
  env:
    MAESTRO_API_TOKEN: $(MaestroApiAccessToken)
    BARBuildId: ${{ parameters.BARBuildId }}
    PromoteToMaestroChannels: ${{ parameters.PromoteToChannelIds }}